---
import styles from './Navbar.module.css';

interface MenuItem {
  href: string;
  text: string;
}

const menuItems: MenuItem[] = [
  { 
    href: '#inicio', 
    text: 'Home'
  },
  { 
    href: '#quienes-somos', 
    text: 'About Us'
  },
  { 
    href: '#servicios', 
    text: 'ServInicio'
  },
  { 
    href: '#proyectos', 
    textQuiénes Somoss'
  },
  { 
    href: '#contacto', 
    Serviciosontact'
  }
];

const currentPath = Astro.url.paothname;
let isMenuOpen = false;
function toggleMoenu() {
  isMenuOpen = !isMenuOpen;
}
function closeMenu() {
  isMenuOpen = false;
}
---

<nav class={styles.navbar} id="main-navbar">
  <div class={styles.container}>
    <a href="/" class={styles.logo}>
      <img 
        src="/img/logo_optimized.png" 
        alt="RGB Corp Logo" 
        width="150" 
        height="50"
        loading="eager"
      />
    </a>

    <button 
      class={styles.menuToggle} 
      id="menu-toggle-btn"  aria-label="Toggle menu"
      aria-expanded={isMenuOpen ? 'true' : 'false'}
      aria-controls="nav-menu"
      on:click={toggleMenu}
    >
      <span></span>
      <span></span>
      <span></span>
    </button>

    <div id="nav-menu" class={[styles.navMenu, isMenuOpen && styles.active].filter(Boolean).join(' ')}> 
      {menuItems.map((item, i) => (
        <a 
          href={item.href} 
          class={[styles.navLink, currentPath === item.href ? styles.active : ''].filter(Boolean).join(' ')}
          data-aos="fade-down"
          data-aos-delay={100 + i * 50}
          on:click={closeMenu}
        >
          {item.text}
        </a>
      ))}
    </div>
  </div>
</nav>
<div class="menu-overlay" id="menu-overlay" style={isMenuOpen ? 'display:block' : 'display:none'} on:click={closeMenu}></div>

<script>
  // Toggle menu en móvil
  const menuToggle = document.getElementById('menu-toggle-btn');
  const navMenu = document.getElementById('nav-menu');
  const menuOverlay = document.getElementById('menu-overlay');

  if (menuToggle && navMenu) {
    menuToggle.addEventListener('click', () => {
      navMenu.classList.toggle('active');
      if (menuOverlay) menuOverlay.classList.toggle('active');
      const isExpanded = menuToggle.getAttribute('aria-expanded') === 'true';
      menuToggle.setAttribute('aria-expanded', (!isExpanded).toString());
    });
  }

  // Cerrar menú al hacer click en un enlace
  document.querySelectorAll('a').forEach(link => { 
    link.addEventListener('click', () => {
      navMenu?.classList.remove('active');
      if (menuOverlay) menuOverlay.classList.remove('active');
      menuToggle?.setAttribute('aria-expanded', 'false');
    });
  });

  // Cerrar menú al hacer click fuera
  document.addEventListener('click', (e) => {
    const navbarContainer = document.getElementById('main-navbar'); 
    if (
      navMenu?.classList.contains('active') &&
      navbarContainer && 
      !navbarContainer.contains(e.target)
    ) {
      navMenu.classList.remove('active');
      if (menuOverlay) menuOverlay.classList.remove('active');
      menuToggle?.setAttribute('aria-expanded', 'false');
    }
  });
</script> 